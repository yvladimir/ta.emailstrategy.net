<?php

namespace common\models;

use Yii;
use yii\db\Expression;

/**
 * This is the model class for table "visit".
 *
 * @property int $id
 * @property string $ga
 * @property int $ip
 * @property string $session
 * @property string $datetime
 * @property string $utm_source
 * @property string $utm_medium
 * @property string $utm_campaign
 * @property string $utm_term
 * @property string $utm_content
 *
 * @property Wallet[] $wallets
 */
class Visit extends \yii\db\ActiveRecord
{
    public $human_ip;
    public $amount_of_sessions;
    public $amount_of_wallets;
    public $total;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'visit';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['ip'], 'integer'],
            [['datetime', 'human_ip'], 'safe'],
            [['ga'], 'string', 'max' => 100],
            [['session', 'utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'session' => 'Session',
            'datetime' => 'Datetime',
            'utm_source' => 'Utm Source',
            'utm_medium' => 'Utm Medium',
            'utm_campaign' => 'Utm Campaign',
            'utm_term' => 'Utm Term',
            'utm_content' => 'Utm Content',
            'total' => 'Total (ETH)',
        ];
    }

    public static function getMostReachUTMSources()
    {
        return self::find()->select([
            'utm_source',
            'count(visit.session) as amount_of_sessions',
            'count(wallet.id) as amount_of_wallets',
            'sum(wallet.amount) as total'
        ])
            ->joinWith('wallets')
            ->groupBy('utm_source')
            ->orderBy('total DESC');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getWallets()
    {
        return $this->hasMany(Wallet::className(), ['visit_id' => 'id']);
    }

    public function beforeSave($insert)
    {
        $this->ip = new Expression('INET_ATON("' . $this->human_ip . '")');
        $this->datetime = new Expression('NOW()');
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

}
